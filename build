#!/usr/bin/env sh

! type mkarchiso >/dev/null 2>&1 && sudo pacman --noconfirm -S archiso

CUR_DIR=`dirname $(readlink -f $0)`
OUT_DIR="$CUR_DIR/out"
IMAGE_LINK="$CUR_DIR/archlinux.iso"

rm $IMAGE_LINK
sudo rm -rf $OUT_DIR

SCRIPTS_DIR="$CUR_DIR/scripts"

DB_BANE="custom"
BUILD_DIR="/tmp/arc"
sudo rm -rf "$BUILD_DIR"

WORK_DIR="$BUILD_DIR/workdir"
DB_DIR="$BUILD_DIR/blankdb"
PROFILE_DIR="$BUILD_DIR/profile"
ROOT_DIR="$PROFILE_DIR/airootfs/root"
PKG_CACHE_DIR="$ROOT_DIR/pkg"


mkdir -p "$PROFILE_DIR"
cp -r $CUR_DIR/base/* $PROFILE_DIR

mkdir -p "$PKG_CACHE_DIR"
mkdir -p "$DB_DIR"
source "$ROOT_DIR/CFG"
ENV_SUBST=$(printf '${%s} ' $(env | cut -d'=' -f1 | grep '^CFG_'))
find $ROOT_DIR/lists/* -maxdepth 1 -type f -not -name 'aur' -exec cat {} + | envsubst "$ENV_SUBST" | sudo pacman -Syw --dbpath "$DB_DIR" --cachedir "$PKG_CACHE_DIR" --noconfirm --needed -
[ $? != 0 ] && exit -1

while read pkg; do
    echo $pkg
    PKGS=$(yay -Sii $pkg |sed -n '/Depends\ On/,/:/p'|sed '$d'|cut -d: -f2|awk '{$1=$1};1')
    if [ ! "$PKGS" = "None" ]; then
        sudo pacman -Syw --dbpath "$DB_DIR" --cachedir "$PKG_CACHE_DIR" --noconfirm --needed $PKGS
    fi

    TMP_DIR=$(mktemp -d)
    git clone "https://aur.archlinux.org/${pkg}.git" "$TMP_DIR"
    cd "$TMP_DIR"
    makepkg -s --noconfirm
    cp *pkg.tar.zst "$PKG_CACHE_DIR"
    cd ..
    rm -rf "$TMP_DIR"
done < "$ROOT_DIR/lists/aur"

repo-add -R -n ${PKG_CACHE_DIR}/${DB_BANE}.db.tar.zst ${PKG_CACHE_DIR}/*pkg.tar.zst

sync

sudo mkarchiso -v -o $OUT_DIR -w $WORK_DIR $PROFILE_DIR
ln -s $(find $OUT_DIR/archlinux-*.iso) "$IMAGE_LINK"

sudo rm -rf "$BUILD_DIR"
